{
  "audit": {
    "lockfile_dependency_count": 250,
    "lockfile_path": null,
    "vulnerabilities": [
      {
        "advisory": {
          "aliases": [],
          "categories": [],
          "collection": "crates",
          "cvss": null,
          "date": "2019-07-16",
          "description": "Affected versions of this crate caused traps and/or memory unsafety by zero-initializing references.\nThey also could lead to uninitialized memory being dropped if the field for which the offset is requested was behind a deref coercion, and that deref coercion caused a panic.\n\nThe flaw was corrected by using `MaybeUninit`.\n",
          "id": "RUSTSEC-2019-0011",
          "informational": null,
          "keywords": [],
          "obsolete": false,
          "package": "memoffset",
          "patched_versions": [],
          "references": [],
          "title": "Flaw in offset_of and span_of causes SIGILL, drops uninitialized memory of arbitrary type on panic in client code",
          "unaffected_versions": [],
          "url": "https://github.com/Gilnaa/memoffset/issues/9#issuecomment-505461490"
        },
        "affected": null,
        "package": {
          "dependencies": [],
          "name": "memoffset",
          "source": "registry+https://github.com/rust-lang/crates.io-index",
          "version": "0.2.1"
        },
        "versions": {
          "patched": [
            ">= 0.5.0"
          ],
          "unaffected": []
        }
      },
      {
        "advisory": {
          "aliases": [],
          "categories": [],
          "collection": "crates",
          "cvss": null,
          "date": "2019-06-06",
          "description": "Attempting to call `grow` on a spilled SmallVec with a value equal to the current capacity causes it to free the existing data. This performs a double free immediately and may lead to use-after-free on subsequent accesses to the SmallVec contents.\n\nAn attacker that controls the value passed to `grow` may exploit this flaw to obtain memory contents or gain remote code execution.\n\nCredits to @ehuss for discovering, reporting and fixing the bug.\n",
          "id": "RUSTSEC-2019-0009",
          "informational": null,
          "keywords": [
            "double free",
            "use after free",
            "arbitrary code execution"
          ],
          "obsolete": false,
          "package": "smallvec",
          "patched_versions": [],
          "references": [],
          "title": "Double-free and use-after-free in SmallVec::grow()",
          "unaffected_versions": [],
          "url": "https://github.com/servo/rust-smallvec/issues/148"
        },
        "affected": {
          "arch": [],
          "functions": {
            "smallvec::SmallVec::grow": [
              "< 0.6.10, >= 0.6.5"
            ]
          },
          "os": []
        },
        "package": {
          "dependencies": [],
          "name": "smallvec",
          "source": "registry+https://github.com/rust-lang/crates.io-index",
          "version": "0.6.9"
        },
        "versions": {
          "patched": [
            ">= 0.6.10"
          ],
          "unaffected": [
            "< 0.6.5"
          ]
        }
      },
      {
        "advisory": {
          "aliases": [],
          "categories": [
            "code-execution",
            "memory-corruption"
          ],
          "collection": "crates",
          "cvss": null,
          "date": "2019-07-19",
          "description": "Attempting to call `grow` on a spilled SmallVec with a value less than the current capacity causes corruption of memory allocator data structures.\n\nAn attacker that controls the value passed to `grow` may exploit this flaw to obtain memory contents or gain remote code execution.\n\nCredits to @ehuss for discovering, reporting and fixing the bug.\n",
          "id": "RUSTSEC-2019-0012",
          "informational": null,
          "keywords": [],
          "obsolete": false,
          "package": "smallvec",
          "patched_versions": [],
          "references": [],
          "title": "Memory corruption in SmallVec::grow()",
          "unaffected_versions": [],
          "url": "https://github.com/servo/rust-smallvec/issues/149"
        },
        "affected": {
          "arch": [],
          "functions": {
            "smallvec::SmallVec::grow": [
              "< 0.6.10, >= 0.6.3"
            ]
          },
          "os": []
        },
        "package": {
          "dependencies": [],
          "name": "smallvec",
          "source": "registry+https://github.com/rust-lang/crates.io-index",
          "version": "0.6.9"
        },
        "versions": {
          "patched": [
            ">= 0.6.10"
          ],
          "unaffected": [
            "< 0.6.3"
          ]
        }
      }
    ],
    "vulnerabilities_count": 3,
    "vulnerabilities_found": true
  },
  "branch": "master",
  "cargo_audit_version": "cargo-audit 0.9.1",
  "cargo_lockfile_path": "Cargo.lock",
  "cargo_version": "cargo 1.38.0 (23ef9a4ef 2019-08-20)",
  "commit": "79157df7b193857a2e7e3fe8e61e38305e1d47d4",
  "org": "mozilla-services",
  "ref": {
    "kind": "branch",
    "value": "master"
  },
  "repo": "channelserver",
  "ripgrep_version": "ripgrep 11.0.2 (rev 3de31f7527)",
  "rustc_version": "rustc 1.38.0 (625451e37 2019-09-23)",
  "tag": null
}